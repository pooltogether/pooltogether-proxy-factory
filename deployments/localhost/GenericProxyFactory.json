{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "created",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "ProxyCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_instance",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_instance",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "create2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_master",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "predictDeterministicAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd117683cde81e939944c93e6c14b1de9992b3ef4b6f1f598a172e7945e11266b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "369227",
    "logsBloom": "0x
    "blockHash": "0xd67b1e7372cf1ca9d0002598e536e2073fc722c643f7fa8b02ae4a90f8af8ba8",
    "transactionHash": "0xd117683cde81e939944c93e6c14b1de9992b3ef4b6f1f598a172e7945e11266b",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "369227",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "a1b29fdb4c1ca98301af811cc81672a5",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"created\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_instance\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_instance\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"create2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_master\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"predictDeterministicAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"create(address,bytes)\":{\"params\":{\"_data\":\"Data which is to be called after the proxy contract is created\",\"_instance\":\"Contract implementation which the created contract will point at\"}},\"create2(address,bytes32,bytes)\":{\"params\":{\"_data\":\"Data which is to be called after the proxy contract is created\",\"_instance\":\"Contract implementation which the created contract will point at\",\"_salt\":\"Salt which is used as the create2 salt\"}},\"predictDeterministicAddress(address,bytes32)\":{\"params\":{\"_master\":\"Contract implementation which the created contract will point at\",\"_salt\":\"Salt which would be used as the create2 salt\"}}},\"title\":\"PoolTogether Generic Minimal ProxyFactory\",\"version\":1},\"userdoc\":{\"events\":{\"ProxyCreated(address,address)\":{\"notice\":\"Event fired when minimal proxy has been created\"}},\"kind\":\"user\",\"methods\":{\"create(address,bytes)\":{\"notice\":\"Create a proxy contract for given instance\"},\"create2(address,bytes32,bytes)\":{\"notice\":\"Create a proxy contract with a deterministic address using create2\"},\"predictDeterministicAddress(address,bytes32)\":{\"notice\":\"Calculates what the proxy address would be when deterministically created\"}},\"notice\":\"EIP-1167 Minimal proxy factory pattern for creating proxy contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GenericProxyFactory.sol\":\"GenericProxyFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary ClonesUpgradeable {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `master`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address master) internal returns (address instance) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, master))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `master`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `master` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address master, bytes32 salt) internal returns (address instance) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, master))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address master, bytes32 salt, address deployer) internal pure returns (address predicted) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, master))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address master, bytes32 salt) internal view returns (address predicted) {\\n        return predictDeterministicAddress(master, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xa828d9e2842506a66293b8f68dcb5a81dbb492bffc86a2c683c1b586ccbdf23e\",\"license\":\"MIT\"},\"contracts/GenericProxyFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol\\\";\\n\\n/// @title PoolTogether Generic Minimal ProxyFactory\\n/// @notice EIP-1167 Minimal proxy factory pattern for creating proxy contracts\\ncontract GenericProxyFactory{\\n  \\n  ///@notice Event fired when minimal proxy has been created\\n  event ProxyCreated(address created, address implementation);\\n\\n  /// @notice Create a proxy contract for given instance\\n  /// @param _instance Contract implementation which the created contract will point at\\n  /// @param _data Data which is to be called after the proxy contract is created\\n  function create(address _instance, bytes calldata _data) public returns (address) {\\n    \\n    address instanceCreated = ClonesUpgradeable.clone(_instance);\\n    emit ProxyCreated(instanceCreated, _instance);\\n\\n    if(_data.length > 0) {\\n      (bool success,) = instanceCreated.call(_data);\\n      require(success, \\\"ProxyFactory/constructor-call-failed\\\");\\n    }\\n\\n    return instanceCreated;\\n  }\\n\\n  /// @notice Create a proxy contract with a deterministic address using create2\\n  /// @param _instance Contract implementation which the created contract will point at\\n  /// @param _salt Salt which is used as the create2 salt\\n  /// @param _data Data which is to be called after the proxy contract is created\\n  function create2(address _instance, bytes32 _salt, bytes calldata _data) public returns (address) {\\n\\n    address instanceCreated = ClonesUpgradeable.cloneDeterministic(_instance, _salt);\\n    emit ProxyCreated(instanceCreated, _instance);\\n\\n    if(_data.length > 0) {\\n      (bool success,) = instanceCreated.call(_data);\\n      require(success, \\\"ProxyFactory/constructor-call-failed\\\");\\n    }\\n\\n    return instanceCreated;\\n  }\\n\\n  /// @notice Calculates what the proxy address would be when deterministically created\\n  /// @param _master Contract implementation which the created contract will point at\\n  /// @param _salt Salt which would be used as the create2 salt\\n  function predictDeterministicAddress(address _master, bytes32 _salt) public view returns (address) {\\n    return ClonesUpgradeable.predictDeterministicAddress(_master, _salt, address(this));\\n  }\\n\\n}\\n\",\"keccak256\":\"0x7f12d1430f614fb99ec6dc73dd78b5b11e3ec1644ace58a42ebdf7457a0d3074\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506105b8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063360d0fad1461004657806368dd803e1461008e578063a3f697ba14610113575b600080fd5b6100726004803603604081101561005c57600080fd5b506001600160a01b038135169060200135610193565b604080516001600160a01b039092168252519081900360200190f35b610072600480360360608110156100a457600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156100d457600080fd5b8201836020820111156100e657600080fd5b8035906020019184600183028401116401000000008311171561010857600080fd5b5090925090506101a9565b6100726004803603604081101561012957600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561015457600080fd5b82018360208201111561016657600080fd5b8035906020019184600183028401116401000000008311171561018857600080fd5b5090925090506102b2565b60006101a08383306103b9565b90505b92915050565b6000806101b68686610417565b604080516001600160a01b0380841682528916602082015281519293507f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e929081900390910190a182156102a9576000816001600160a01b03168585604051808383808284376040519201945060009350909150508083038183865af19150503d8060008114610262576040519150601f19603f3d011682016040523d82523d6000602084013e610267565b606091505b50509050806102a75760405162461bcd60e51b815260040180806020018281038252602481526020018061055f6024913960400191505060405180910390fd5b505b95945050505050565b6000806102be856104bc565b604080516001600160a01b0380841682528816602082015281519293507f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e929081900390910190a182156103b1576000816001600160a01b03168585604051808383808284376040519201945060009350909150508083038183865af19150503d806000811461036a576040519150601f19603f3d011682016040523d82523d6000602084013e61036f565b606091505b50509050806103af5760405162461bcd60e51b815260040180806020018281038252602481526020018061055f6024913960400191505060405180910390fd5b505b949350505050565b604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b8152606093841b60148201526f5af43d82803e903d91602b57fd5bf3ff60801b6028820152921b6038830152604c8201526037808220606c830152605591012090565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b0381166101a3576040805162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c6564000000000000000000604482015290519081900360640190fd5b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b038116610559576040805162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015290519081900360640190fd5b91905056fe50726f7879466163746f72792f636f6e7374727563746f722d63616c6c2d6661696c6564a26469706673582212206437552bfd23ef10ade291c3da3935fb86c6914633e8c93016de889aa05d7ca564736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063360d0fad1461004657806368dd803e1461008e578063a3f697ba14610113575b600080fd5b6100726004803603604081101561005c57600080fd5b506001600160a01b038135169060200135610193565b604080516001600160a01b039092168252519081900360200190f35b610072600480360360608110156100a457600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156100d457600080fd5b8201836020820111156100e657600080fd5b8035906020019184600183028401116401000000008311171561010857600080fd5b5090925090506101a9565b6100726004803603604081101561012957600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561015457600080fd5b82018360208201111561016657600080fd5b8035906020019184600183028401116401000000008311171561018857600080fd5b5090925090506102b2565b60006101a08383306103b9565b90505b92915050565b6000806101b68686610417565b604080516001600160a01b0380841682528916602082015281519293507f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e929081900390910190a182156102a9576000816001600160a01b03168585604051808383808284376040519201945060009350909150508083038183865af19150503d8060008114610262576040519150601f19603f3d011682016040523d82523d6000602084013e610267565b606091505b50509050806102a75760405162461bcd60e51b815260040180806020018281038252602481526020018061055f6024913960400191505060405180910390fd5b505b95945050505050565b6000806102be856104bc565b604080516001600160a01b0380841682528816602082015281519293507f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e929081900390910190a182156103b1576000816001600160a01b03168585604051808383808284376040519201945060009350909150508083038183865af19150503d806000811461036a576040519150601f19603f3d011682016040523d82523d6000602084013e61036f565b606091505b50509050806103af5760405162461bcd60e51b815260040180806020018281038252602481526020018061055f6024913960400191505060405180910390fd5b505b949350505050565b604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b8152606093841b60148201526f5af43d82803e903d91602b57fd5bf3ff60801b6028820152921b6038830152604c8201526037808220606c830152605591012090565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b0381166101a3576040805162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c6564000000000000000000604482015290519081900360640190fd5b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b038116610559576040805162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015290519081900360640190fd5b91905056fe50726f7879466163746f72792f636f6e7374727563746f722d63616c6c2d6661696c6564a26469706673582212206437552bfd23ef10ade291c3da3935fb86c6914633e8c93016de889aa05d7ca564736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "create(address,bytes)": {
        "params": {
          "_data": "Data which is to be called after the proxy contract is created",
          "_instance": "Contract implementation which the created contract will point at"
        }
      },
      "create2(address,bytes32,bytes)": {
        "params": {
          "_data": "Data which is to be called after the proxy contract is created",
          "_instance": "Contract implementation which the created contract will point at",
          "_salt": "Salt which is used as the create2 salt"
        }
      },
      "predictDeterministicAddress(address,bytes32)": {
        "params": {
          "_master": "Contract implementation which the created contract will point at",
          "_salt": "Salt which would be used as the create2 salt"
        }
      }
    },
    "title": "PoolTogether Generic Minimal ProxyFactory",
    "version": 1
  },
  "userdoc": {
    "events": {
      "ProxyCreated(address,address)": {
        "notice": "Event fired when minimal proxy has been created"
      }
    },
    "kind": "user",
    "methods": {
      "create(address,bytes)": {
        "notice": "Create a proxy contract for given instance"
      },
      "create2(address,bytes32,bytes)": {
        "notice": "Create a proxy contract with a deterministic address using create2"
      },
      "predictDeterministicAddress(address,bytes32)": {
        "notice": "Calculates what the proxy address would be when deterministically created"
      }
    },
    "notice": "EIP-1167 Minimal proxy factory pattern for creating proxy contracts",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}